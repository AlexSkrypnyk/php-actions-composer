name: 'Composer (php-actions)'
description: 'Use the Composer CLI in your Github Actions.'

inputs:
  composer_version:
    description: What version of Composer to use
    default: latest
    required: false

  command:
    description: Composer command to run
    required: true
    default: install

  only_args:
    description: "Only run the desired command with this args. Ignoring all other provided arguments"
    required: false

  interaction:
    description: "Whether to ask any interactive questions. Values: 'yes' or 'no'"
    required: false
    default: no

  suggest:
    description: "Whether to show package suggestions. Values: 'yes' or 'no'"
    required: false
    default: no

  dev:
    description: "Whether to install dev packages. Values: 'yes' or 'no'"
    required: false
    default: yes

  progress:
    description: "Whether to output download progress"
    required: false
    default: no

  quiet:
    description: "Whether to suppress all messages"
    required: false
    default: no

  args:
    description: Optional arguments to pass
    required: false

  ssh_key:
    description: The private key contents to use for private repositories
    required: false

  ssh_key_pub:
    description: The public key contents to use for private repositories
    required: false

  ssh_domain:
    description: The domain to gather SSH public keys for (automatic for github.com, gitlab.com, bitbucket.org)
    required: false

  working_dir:
    description: Use the given directory as working directory
    required: false

outputs:
  time:
    description: "The time the action was run"

  composer_cache_dir:
    description: "Where composer created its cache"
    value: ${{ steps.composer_run.outputs.composer_cache_dir }}

  composer_major_version:
    description: "Major version of the composer run (can be used as part of the cache key)"
    value: ${{ steps.composer_run.outputs.composer_major_version }}

  composer_version:
    description: "Exact version of the composer run"
    value: ${{ steps.composer_run.outputs.composer_major_version }}

runs:
  using: "composite"
  steps:
    - env:
        action_composer_version: ${{ inputs.composer_version }}
        action_command: ${{ inputs.command }}
        action_only_args: ${{ inputs.only_args }}
        action_interaction: ${{ inputs.interaction }}
        action_suggest: ${{ inputs.suggest }}
        action_dev: ${{ inputs.dev }}
        action_progress: ${{ inputs.progress }}
        action_quiet: ${{ inputs.quiet }}
        action_args: ${{ inputs.args }}
        action_ssh_key: ${{ inputs.ssh_key }}
        action_ssh_key_pub: ${{ inputs.ssh_key_pub }}
        action_ssh_domain: ${{ inputs.ssh_domain }}
        action_working_dir: ${{ inputs.working_dir }}
      shell: bash
      id: composer_run
      run: |
        set -e
        # Make sure the latest version is available, pull it quietly
        docker pull -q composer:${action_composer_version}
        # Extract the major version
        DETECTED_VERSION=$(docker run --rm composer:${action_composer_version} --version | perl -pe '($_)=/\b(\d+.\d+\.\d+)\b/;')
        DETECTED_MAJOR_VERSION=$(docker run --rm composer:${action_composer_version} --version | perl -pe '($_)=/\b(\d)\d*\.\d+\.\d+/;')
        echo "::set-output name=composer_cache_dir::${RUNNER_WORKSPACE}/composer/cache"
        echo "::set-output name=composer_major_version::${DETECTED_MAJOR_VERSION}"
        echo "::set-output name=composer_version::${DETECTED_VERSION}"
        case "${action_command}" in
          get_config)
            exit
            ;;
          *)
            echo "Running composer v${DETECTED_VERSION} with: $action_command $action_args"
            docker run --rm \
              --volume ${RUNNER_WORKSPACE}/composer:/tmp \
              --volume ${GITHUB_WORKSPACE}:/app \
              -w /app \
              composer:${action_composer_version} $action_command $action_args
            ;;
        esac

branding:
  icon: 'package'  
  color: 'purple'
